.TH "/home/ellie/Nextcloud/Coding/GenCLib/maps/gdhmap.h" 3 "GenCLib" \" -*- nroff -*-
.ad l
.nh
.SH NAME
/home/ellie/Nextcloud/Coding/GenCLib/maps/gdhmap.h
.SH SYNOPSIS
.br
.PP
\fC#include <stdlib\&.h>\fP
.br
\fC#include <stdbool\&.h>\fP
.br

.SS "Classes"

.in +1c
.ti -1c
.RI "struct \fBgdhmap_t\fP"
.br
.in -1c
.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBGDH_MAX_KEY_SIZE\fP   128"
.br
.in -1c
.SS "Typedefs"

.in +1c
.ti -1c
.RI "typedef struct \fBgdhmap_t\fP \fBgdhmap\fP"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "\fBgdhmap\fP * \fBgdhmap_create\fP (size_t max_size)"
.br
.RI "Create the gdhmap struct\&. "
.ti -1c
.RI "void \fBgdhmap_free\fP (\fBgdhmap\fP *\fBgdhmap\fP, bool rem_content)"
.br
.RI "free the memory blocks used for the map "
.ti -1c
.RI "void * \fBgdhmap_get\fP (\fBgdhmap\fP *\fBgdhmap\fP, char *key)"
.br
.RI "Get the value that was previously stored with a specific key\&. "
.ti -1c
.RI "int \fBgdhmap_put\fP (\fBgdhmap\fP *\fBgdhmap\fP, char *key, void *value, size_t valuesize)"
.br
.RI "Put some value into the map with a key\&. "
.ti -1c
.RI "int \fBgdhmap_remove\fP (\fBgdhmap\fP *\fBgdhmap\fP, char *key)"
.br
.RI "Remove a key-value pair from the map\&. "
.ti -1c
.RI "\fBgdhmap\fP * \fBgdhmap_resize\fP (\fBgdhmap\fP *\fBgdhmap\fP, size_t new_size, size_t typesize)"
.br
.RI "Resize the map to a new size\&. "
.in -1c
.SH "Macro Definition Documentation"
.PP 
.SS "#define GDH_MAX_KEY_SIZE   128"

.SH "Typedef Documentation"
.PP 
.SS "typedef struct \fBgdhmap_t\fP \fBgdhmap\fP"

.SH "Function Documentation"
.PP 
.SS "\fBgdhmap\fP * gdhmap_create (size_t max_size)"

.PP
Create the gdhmap struct\&. 
.PP
\fBParameters\fP
.RS 4
\fImax_size\fP the maximum size of the map 
.RE
.PP
\fBReturns\fP
.RS 4
pointer to the struct 
.RE
.PP

.SS "void gdhmap_free (\fBgdhmap\fP * map, bool rem_Content)"

.PP
free the memory blocks used for the map 
.PP
\fBParameters\fP
.RS 4
\fImap\fP the map pointer 
.br
\fIrem_Content\fP whether to remove the content pointed to by maps pointers 
.RE
.PP

.SS "void * gdhmap_get (\fBgdhmap\fP * gdhmap, char * key)"

.PP
Get the value that was previously stored with a specific key\&. 
.PP
\fBParameters\fP
.RS 4
\fIgdhmap\fP pointer to the map 
.br
\fIkey\fP the key as a string 
.RE
.PP
\fBReturns\fP
.RS 4
the pointer to the value if the key exists -> else NULL 
.RE
.PP

.SS "int gdhmap_put (\fBgdhmap\fP * gdhmap, char * key, void * value, size_t valuesize)"

.PP
Put some value into the map with a key\&. 
.PP
\fBParameters\fP
.RS 4
\fIgdhmap\fP the gdhmap 
.br
\fIkey\fP the key to store it with 
.br
\fIvalue\fP the value pointer 
.br
\fIvaluesize\fP the byte size of the value (sizeof(value)) 
.RE
.PP
\fBReturns\fP
.RS 4
1 if the key was successfully inserted else 0 
.RE
.PP

.SS "int gdhmap_remove (\fBgdhmap\fP * gdhmap, char * key)"

.PP
Remove a key-value pair from the map\&. 
.PP
\fBParameters\fP
.RS 4
\fIgdhmap\fP the map 
.br
\fIkey\fP the key to remove 
.RE
.PP
\fBReturns\fP
.RS 4
1 if the key was removed\&. Else 0 
.RE
.PP

.SS "\fBgdhmap\fP * gdhmap_resize (\fBgdhmap\fP * map, size_t new_size, size_t typesize)"

.PP
Resize the map to a new size\&. 
.PP
\fBParameters\fP
.RS 4
\fImap\fP the old map 
.br
\fInew_size\fP the new size 
.br
\fItypesize\fP the size of the datatype pointed to by values 
.RE
.PP
\fBReturns\fP
.RS 4
pointer to the new map 
.RE
.PP

.SH "Author"
.PP 
Generated automatically by Doxygen for GenCLib from the source code\&.
